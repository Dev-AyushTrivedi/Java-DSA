Types of operator's 

            Arithmetic operator
            it consist of two types :

                        1. Binary operator : when there is total number of operands in a expression is two .

                        2. Unary operator : when there is total number of operands in a expression is one.   

                                ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
                                |                                                                                  |
                                |    1. binary operator :  + , - , * , / , %                                       |
                                |                                                                                  |
                                |    2. unary operator :   ++ (increment operator), -- (decrement operator)        |
                                |                                                                                  |
                                ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

 Increment operator (++): it has two types

                I. Preincrement operator (++a): in it the value changes first than use the value

                II. Postincrement operator (a++): in it the value used first than use the value is changed. 


||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



Relational operator: the operator which identify the relations between two operands 


            1. ==  checks equal or not
            2. !=  checks the operands are not equal
            3. >  checks the first operand is greater than the second
            4. <  checks the first operand is less than the second
            5. >=  checks the first operand is greater than or equal to second
            6. <=  checks the first operand is less than or equal to second


||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



Logical operator: the logical operator 